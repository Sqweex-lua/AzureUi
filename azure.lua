-- MyWindStyleLib.lua - –ö–æ–¥ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ (–î–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω —á–µ—Ä–µ–∑ loadstring)

local UI_State = {
    CurrentTheme = "Dark", 
    Configuration = {}
}

-- === –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –°–¢–ò–õ–Ø –ò –¶–í–ï–¢–ê ===
local Themes = {
    Dark = {
        ACCENT = Color3.fromRGB(0, 150, 255),
        PRIMARY_BG = Color3.fromRGB(18, 18, 18),
        PANEL_BG = Color3.fromRGB(30, 30, 30),
        ELEMENT_BG = Color3.fromRGB(45, 45, 45),
        TEXT = Color3.fromRGB(255, 255, 255),
        MUTED_TEXT = Color3.fromRGB(150, 150, 150),
    },
    Light = {
        ACCENT = Color3.fromRGB(255, 80, 0),
        PRIMARY_BG = Color3.fromRGB(240, 240, 240),
        PANEL_BG = Color3.fromRGB(255, 255, 255),
        ELEMENT_BG = Color3.fromRGB(220, 220, 220),
        TEXT = Color3.fromRGB(0, 0, 0),
        MUTED_TEXT = Color3.fromRGB(100, 100, 100),
    }
}
local CurrentColors = Themes[UI_State.CurrentTheme]

local PLAYERS = game:GetService("Players")
local UI_SERVICE = game:GetService("UserInputService")
local HTTP_SERVICE = game:GetService("HttpService")

-- === LUCIDE ICONS MAPPING (–û–ë–ù–û–í–õ–ï–ù–ù–´–ï ID –ê–°–°–ï–¢–û–í) ===
local ICON_ASSET_IDS = {
    zap = "rbxassetid://13160015076",     -- Zap (–ú–æ–ª–Ω–∏—è)
    settings = "rbxassetid://7059346386", -- Settings (–®–µ—Å—Ç–µ—Ä–µ–Ω–∫–∞)
    
    -- –ó–ê–ì–õ–£–®–ö–ò: –ó–∞–º–µ–Ω–∏—Ç–µ, –µ—Å–ª–∏ –Ω—É–∂–Ω—ã —Ä–µ–∞–ª—å–Ω—ã–µ –∏–∫–æ–Ω–∫–∏
    user = "rbxassetid://555555555",     
    lock = "rbxassetid://111111111",     
    toggle_on = "rbxassetid://444444444", 
    toggle_off = "rbxassetid://666666666",
    button = "rbxassetid://222222222",   
    default = "rbxassetid://333333333",   
}

-- === –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò (–ê–ù–ê–õ–û–ì–ò–ß–ù–´ –ü–†–ï–î–´–î–£–©–ï–ú–£ –û–¢–í–ï–¢–£) ===

local function GetIconAssetId(iconName)
    local id = ICON_ASSET_IDS[iconName:lower()]
    return id or ICON_ASSET_IDS.default
end

local function ValidateKey(providedKey, validKeys)
    for _, key in ipairs(validKeys) do
        if key == providedKey then return true end
    end
    return false
end

local function CreateErrorPrompt(title, subtitle)
    -- ... (–ª–æ–≥–∏–∫–∞ –æ–∫–Ω–∞ –æ—à–∏–±–∫–∏)
end

local function CreateImageIcon(parent, iconName, color, size, position, alignment)
    local imageLabel = Instance.new("ImageLabel")
    imageLabel.Size = size or UDim2.new(0, 18, 0, 18)
    imageLabel.Image = GetIconAssetId(iconName)
    imageLabel.ImageColor3 = color or CurrentColors.MUTED_TEXT
    imageLabel.BackgroundTransparency = 1
    imageLabel.Parent = parent
    imageLabel.Position = position or UDim2.new(0, 0, 0, 0)
    imageLabel.AnchorPoint = alignment or Vector2.new(0, 0)
    return imageLabel
end

local function ApplyTheme(themeName)
    -- ... (–ª–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã)
    local colors = Themes[themeName]
    if not colors then return end

    UI_State.CurrentTheme = themeName
    CurrentColors = colors
    UI_State.Configuration.Theme = themeName

    local window = UI_State.Window
    if not window then return end
    
    window.BackgroundColor3 = colors.PRIMARY_BG
    -- (–ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∏, –∫–∞–∫ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º –æ—Ç–≤–µ—Ç–µ)
    
    print("üé® Theme set to: " .. themeName)
end

local function SaveConfiguration()
    UI_State.Configuration.Theme = UI_State.CurrentTheme
    local jsonConfig = HTTP_SERVICE:JSONEncode(UI_State.Configuration)
    print("üíæ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ (–∏–º–∏—Ç–∞—Ü–∏—è writefile):")
    print(jsonConfig)
    return jsonConfig
end

local function SetupBaseUI(config)
    -- ... (–ª–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑–æ–≤–æ–≥–æ UI)
    local player = PLAYERS.LocalPlayer
    local ScreenGui = Instance.new("ScreenGui", player.PlayerGui)
    
    local Window = Instance.new("Frame", ScreenGui)
    Window.Name = "WindUI_Window"
    Window.Size = UDim2.new(0, 700, 0, 500)
    Window.BackgroundColor3 = CurrentColors.PRIMARY_BG
    Window.Draggable = true
    Instance.new("UICorner", Window).CornerRadius = UDim.new(0, 8)
    
    local TabBar = Instance.new("Frame", Window)
    TabBar.Name = "TabBar"
    TabBar.Size = UDim2.new(0.3, 0, 1, 0)
    TabBar.BackgroundColor3 = CurrentColors.PANEL_BG
    
    local TabList = Instance.new("ScrollingFrame", TabBar)
    TabList.Name = "TabList"
    TabList.BackgroundTransparency = 1
    
    local ContentPanel = Instance.new("ScrollingFrame", Window)
    ContentPanel.Name = "ContentPanel"
    ContentPanel.BackgroundColor3 = CurrentColors.PRIMARY_BG

    return Window, TabList, ContentPanel
end

local function CreateElementFrameBase(contentFrame, text, subtitle)
    -- ... (–ª–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑–æ–≤–æ–≥–æ —Ñ—Ä–µ–π–º–∞ —ç–ª–µ–º–µ–Ω—Ç–∞)
    local MainFrame = Instance.new("Frame", contentFrame)
    MainFrame.Size = UDim2.new(0.95, 0, 0, 45)
    MainFrame.BackgroundColor3 = CurrentColors.PANEL_BG
    local TitleLabel = Instance.new("TextLabel", MainFrame)
    TitleLabel.TextColor3 = CurrentColors.TEXT
    TitleLabel.BackgroundColor3 = CurrentColors.PANEL_BG
    return MainFrame
end

-- === –û–°–ù–û–í–ù–û–ô API –ë–ò–ë–õ–ò–û–¢–ï–ö–ò ===
local MyWindStyle = {}

function MyWindStyle:CreateWindow(config)
    
    -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–∞
    local keySettings = config.KeySettings or {}
    if config.KeySystem and not ValidateKey(keySettings.Key[1] or "", keySettings.Key or {}) then
        CreateErrorPrompt(keySettings.Title or "ACCESS DENIED", keySettings.Note or "Invalid key provided.")
        return nil
    end

    local Window, TabList, ContentPanel = SetupBaseUI(config)
    UI_State.Window = Window
    UI_State.TabList = TabList 
    UI_State.ContentPanel = ContentPanel
    
    -- Keybind
    local toggleKey = config.ToggleUIKeybind or "K"
    UI_SERVICE.InputBegan:Connect(function(input, gameProcessed)
        if input.KeyCode == Enum.KeyCode[toggleKey] and not gameProcessed then
            Window.Visible = not Window.Visible
        end
    end)
    
    local WindowAPI = {
        ApplyTheme = ApplyTheme,
        SaveConfiguration = SaveConfiguration
    }
    
    function WindowAPI:CreateTab(name, lucideIconName)
        local tabFrame = Instance.new("Frame", ContentPanel)
        tabFrame.Visible = #ContentPanel:GetChildren() == 1
        -- ... (–æ—Å—Ç–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∫–ª–∞–¥–∫–∏)
        
        local TabButton = Instance.new("TextButton", TabList)
        TabButton.Text = name
        TabButton.TextColor3 = CurrentColors.TEXT
        TabButton.BackgroundColor3 = (#ContentPanel:GetChildren() == 1) and CurrentColors.ELEMENT_BG or CurrentColors.PANEL_BG
        
        CreateImageIcon(TabButton, lucideIconName, CurrentColors.MUTED_TEXT, nil, UDim2.new(0, 8, 0.5, 0), Vector2.new(0, 0.5))

        TabButton.MouseButton1Click:Connect(function()
             -- ... (–ª–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫)
        end)
        
        local TabAPI = {}
        
        function TabAPI:CreateButton(text, subtitle, callback)
            local MainFrame = CreateElementFrameBase(tabFrame, text, subtitle)
            CreateImageIcon(MainFrame, "button", CurrentColors.ACCENT, nil, UDim2.new(1, -10, 0.5, 0), Vector2.new(1, 0.5))
            -- ... (–ª–æ–≥–∏–∫–∞ –∫–Ω–æ–ø–∫–∏)
        end
        
        function TabAPI:CreateToggle(text, subtitle, defaultValue, callback)
            local MainFrame = CreateElementFrameBase(tabFrame, text, subtitle)
            -- ... (–ª–æ–≥–∏–∫–∞ —Ç–æ–≥–ª–ª–∞)
            local StatusIcon = CreateImageIcon(MainFrame, defaultValue and "toggle_on" or "toggle_off", CurrentColors.ACCENT, nil, UDim2.new(1, -10, 0.5, 0), Vector2.new(1, 0.5))
            -- ... (–ª–æ–≥–∏–∫–∞ —Ç–æ–≥–ª–ª–∞)
        end
        
        return TabAPI
    end
    
    ApplyTheme(UI_State.CurrentTheme)
    return WindowAPI
end

return MyWindStyle -- –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –≤–æ–∑–≤—Ä–∞—Ç API –¥–ª—è –ª–æ–∞–¥–µ—Ä–∞
